파이썬 변수

변수란 : 어떤 숫자 문자 이런 것 들을 저장하는 공간
언제나 변한다. 선언을 하고 그 값을 언제나 바꿀 수 있음.

변수 선언법
- 변수 할당 설명
- Object identity 파이썬만의 메커ㄴ즘
- 변수 네이밍 규칙
- 예약어

#chapter02-2
#파이썬 완전 기초
#파이썬 변수

# 기본 선언
N = 700

#N에다 700을 넣어라 엔에 필요한걸 잠깐 넣어 놓는 것, 삽입
# 컴퓨터 내부적으로는 메모리 저장장치에 저장

# 출력
Print(n) n이라는 주소에 있는 값을 출력
Print(n*700)
Print(type(n)) n의 자료형 출력, 정수형

# 동시 선언
X = y = z = 700
Print(x,y,z)

# 선언
Var = 75
#재선언
Var= “Change value”

#출력
Print(var)
Print(type(var))

#object references
#변수 값 할당 상태
# 1. 타입에 맞는 오브젝트를 생성
# 2. 값을 생성
# 3. 콘솔 출력


#예1
Print(300)
Print(int(300))
#아래처럼 맨날 이건 정수형이다 하고 선언하기 귀찮을 것이다. 하지만 파이썬은 타입에 맞게 생성해준다.

#예2
#n -> 777 선언
N = 777
#파이썬이 알아서 777을 int형이라고 생각해서 만들어서 넣을 것이다.
Print(n, type(n))
Print()

M =n
# m -> 777 <- n 

Print(m, n)
Print(type(m), type(n))
Print()

M = 400

Print(m, n)
Print(type(m), type(n))
Print()


#id(identity)확인 : 객체의 고유값 확인.

M=800
N=655

Print(id(m))
Print(id(n))
Print(id(m) == id(n)) #false가 출력
Print()

# 같은 오브젝트 참조
M = 800
N = 800

Print(id(m))
Print(id(n))
Print(id(m) == id(n)) #true가 출력
Print()

#파이썬 엔진에서는 효율성을 늘리기 위해 같은 주소에 있는 값을 사용 한다 하지만 n이 만약에 변화가된다면 다른 주소에 저장이된다. (최적화)

#다양한 변수 선언 _ 변수를 어떻게 선언을 했는지
Student1
Student2
# 학생의 데이터를 저장하겠구나 하고 유추 가능

#Camel case : numberOfCollegeGraduates 소문자로 시작해서 대문자, 메소드를 선언할 때 주로사용
#Pascal Case : NumberOfCollegeGraduates -> 클래스 선언때 주로 사용
#Snake case : number_of_college_graduates 언더바로 연결하고 소문자. 파이썬 변수선언할 때 주로 사용

student_grade =3

#허용하는 변수 선언 법
age = 1
Age = 2
aGe = 3
AGE = 4
a_g_e = 5
_age = 6
age_ = 7
_AGE_ = 8
# 다 에러 안남. 특수문자나 숫자로 시작할 때 에러가남 _ $만 봐줌
1age = 9

# 예약어는 변수 명으로 불가능 파이썬에 이미 사용되는 할당되는 언어
for =3 
as = 3
class =3 

#python reserved words 예약어 구글에 치면 다나옴




숫자형

정수, 실수, 8진수, 16진수 등 숫자로 된 데이터들을 다룰 수 있게 해주는 데이터 타입

숫자형 사용법
-파이썬 모든 자료형
-데이터 타입 선언
-연산자 활용
-형 변환
-외부 모듈 사용

#chapter03-01
#파이썬 완전 기초
# 숫자형

#파이썬에서 지원하는 자료형
#외우지말고 적어놓기
“””
Int : 정수 - 소숫점이 없는 
Float : 실수 - 소숫점 이 있는, 
Complex : 복소수 
Bool: 불린 true false 값 저장하는1, 0 
Str : 문자열(시퀀스)
List : 리스트 (시퀀스)

시퀀스는 반복을 처리할 수 있고, 순서가 있음
Set : 집합
Dict : 사전
“””

# 데이터 타입
Str1 =”Python”
Bool = True
Bool = false 
Str2 = ‘Anaconda’
Float = 10.0
Int = 7
List=[str1, str2] 
Dict = {
	“name”: “Machine Learning”.
	“version”: 2.0
} 2.0을 꺼내려면 version이필요햐고 머신러닝을 꺼내려면 네임이 필요함 앞에것 키
Tuple = (7,8,9)
Set = {3,5,7}
#데이터 타입 출력
Print(type(str1))
Print(type(bool))
Print(type(str2))
Print(type(float))
Print(type(int))
Print(type(dict))
Print(type(tuple))
Print(type(set))

#숫자형 연산자
“””
+
-
*
/
// : 몫
%: 나머지
Abs(x) : 절대값
Pow(x,y) :x의 y제곱
X**y
“””

#정수선언
I =77
I2 = -14
Big_int = 7111111112444444444444444444444444444444444444444444444422222222

#정수 출력
Print(i)
Print(i2)
Print(big_int)

#실수출력
F= 0.9999
F2= 3.141592
F3= -3.9
F4 = 3/9

# 실수 출력
Print(f)
Print(f2)
Print(f3)
Print(f4)
Print()

#연산실습
I1 = 39
I2 =939
Big_int1 = 1111111111111111111111111111122222222222222222
Big_int2 = 123235412531236213623213523521351235123521351
F1 = 1.234
F2= 3.939

# +
Print(“>>>>>+”)
Print(“i1+i2 : “, i1+i2)
Print(“f1+f2 : “, f1+f2)
Print(“big_int1 + big_int2 : “, big_int1 + big_int2)
# 서로 다른 형을 연산을 하면 형변환이 자동으로 변한다.
# * 나머지도 다해볼것


#형 변환 실습
a=3.
b=6
c=.7
d=12.7

#타입 출력
print(type(a),type(b),type(c),type(d))

#형 변환
print(float(b)) #정수가 플롯형이됨
print(int(c)) # 0
print(int(d)) #12
print(int(True)) #True :1, false :0
print(float(False))
print()

# 수치 연산 합수
print(abs(-7))
x, y = divmod(100,8)

print (x,y) # 12, 4 몫과 나머지 바로 출력
print(pow(5,3),5**3)

#외부 모듈, 수학 기능이있는 외부 패키지 가져옴
import math

print(math.ceil(5.1))  #x 이상의 수 중 가장 작은 정수
print(math.pi) #원주율 출력
